<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="susussg.pengreenlive.order.mapper.ReviewMapper">

  <select id="findOrdersByUser" resultType="susussg.pengreenlive.order.dto.ReviewDTO">
    SELECT
      o.ORDER_SEQ,
      o.ORDER_DATE,
      o.ORDER_PRODUCT_PRICE,
      o.ORDER_PAYED_PRICE,
      o.DELIVERY_STATUS,
      o.REVIEW_YN,
      p.PRODUCT_NM,
      p.PRODUCT_IMAGE
    FROM
      TB_ORDER o
        JOIN
      TB_PRODUCT p ON o.PRODUCT_SEQ = p.PRODUCT_SEQ
    WHERE
      o.USER_UUID = UUID_TO_BIN(#{userUuid})
  </select>

  <select id="findUnreviewedOrdersByUser" resultType="susussg.pengreenlive.order.dto.ReviewDTO">
    SELECT
      o.ORDER_SEQ,
      o.ORDER_DATE,
      o.ORDER_PRODUCT_PRICE,
      o.ORDER_PAYED_PRICE,
      o.DELIVERY_STATUS,
      o.REVIEW_YN,
      p.PRODUCT_NM,
      p.PRODUCT_IMAGE,
      p.PRODUCT_SEQ
    FROM
      TB_ORDER o
        JOIN
      TB_PRODUCT p ON o.PRODUCT_SEQ = p.PRODUCT_SEQ
    WHERE
      o.USER_UUID = UUID_TO_BIN(#{userUuid}) AND o.REVIEW_YN = 0
  </select>

  <select id="findReviewedOrdersByUser" resultType="susussg.pengreenlive.order.dto.ReviewDTO">
    SELECT
      o.ORDER_DATE,
      o.ORDER_PRODUCT_PRICE,
      o.ORDER_PAYED_PRICE,
      o.DELIVERY_STATUS,
      o.REVIEW_YN,
      p.PRODUCT_NM,
      p.PRODUCT_IMAGE,
      r.REVIEW_CONTENT,
      r.REVIEW_TIME,
      r.REVIEW_SEQ
    FROM
      TB_ORDER o
        JOIN TB_PRODUCT p ON o.PRODUCT_SEQ = p.PRODUCT_SEQ
        JOIN TB_REVIEW r ON o.ORDER_SEQ = r.ORDER_SEQ AND o.USER_UUID = r.USER_UUID
    WHERE
      o.USER_UUID = UUID_TO_BIN(#{userUuid})
      AND o.REVIEW_YN = 1
  </select>

  <delete id="deleteReviewByUserAndReviewSeq" parameterType="map">
    DELETE FROM TB_REVIEW
    WHERE REVIEW_SEQ = #{reviewSeq} AND USER_UUID = UUID_TO_BIN(#{userUuid})
  </delete>

  <insert id="insertReview" parameterType="susussg.pengreenlive.order.dto.ReviewDTO">
    INSERT INTO TB_REVIEW (USER_UUID, PRODUCT_SEQ, REVIEW_CONTENT, REVIEW_TIME, ORDER_SEQ)
    SELECT UUID_TO_BIN(#{review.userUUID}), #{review.productSeq}, #{review.reviewContent},
           #{review.reviewTime}, #{review.orderSeq}
    FROM DUAL
    WHERE NOT EXISTS (
      SELECT 1
      FROM TB_REVIEW
      WHERE ORDER_SEQ = #{review.orderSeq}
        AND PRODUCT_SEQ = #{review.productSeq}
        AND USER_UUID = UUID_TO_BIN(#{review.userUUID})
    );
  </insert>

  <update id="updateReviewYn" parameterType="map">
    UPDATE TB_ORDER
    SET REVIEW_YN = 1
    WHERE USER_UUID = UUID_TO_BIN(#{userUuid}) AND PRODUCT_SEQ = #{productSeq} AND ORDER_SEQ=#{orderSeq}
  </update>

</mapper>
