<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="susussg.pengreenlive.broadcast.mapper.BroadcastStatisticsMapper">

    <!-- 좋아요 수 증가 -->
    <update id="updateLikesCount">
        UPDATE TB_BROADCAST_STATISTICS
        SET LIKES_COUNT = LIKES_COUNT + 1
        WHERE BROADCAST_SEQ = #{broadcastSeq}
    </update>

    <!-- 좋아요 수 감소 -->
    <update id="decrementLikesCount">
        UPDATE TB_BROADCAST_STATISTICS
        SET LIKES_COUNT = LIKES_COUNT - 1
        WHERE BROADCAST_SEQ = #{broadcastSeq}
    </update>

    <!-- 평균 시청자 수 업데이트 -->
    <update id="updateAverageViewerCount">
        UPDATE TB_BROADCAST_STATISTICS
        SET AVG_VIEWER_COUNT = #{averageViewerCount}
        WHERE BROADCAST_SEQ = #{broadcastSeq}
    </update>

    <!-- 최대 시청자 수 업데이트 -->
    <update id="updateMaxViewerCount">
        UPDATE TB_BROADCAST_STATISTICS
        SET MAX_VIEWER_COUNT = #{maxViewerCount}
        WHERE BROADCAST_SEQ = #{broadcastSeq}
    </update>

    <!-- 시청자 수 업데이트 -->
    <update id="updateViewersCount">
        UPDATE TB_BROADCAST_STATISTICS
        SET VIEWERS_COUNT = #{viewersCount}
        WHERE BROADCAST_SEQ = #{broadcastSeq}
    </update>

    <!-- 방송 통계 레코드 삽입 -->
    <insert id="insertBroadcastStatistics" parameterType="susussg.pengreenlive.broadcast.dto.BroadcastStatistics">
        INSERT INTO TB_BROADCAST_STATISTICS (
            BROADCAST_SEQ,
            AVG_VIEWER_COUNT,
            MAX_VIEWER_COUNT,
            LIKES_COUNT,
            AVG_PURCHASE_AMOUNT,
            AVG_VIEWING_TIME,
            BROADCAST_DURATION,
            AVG_PRODUCT_CLICKS,
            TOTAL_SALES_AMOUNT,
            TOTAL_SALES_QTY,
            VIEWS_COUNT
        ) VALUES (
                     #{broadcastSeq},
                     #{avgViewerCount},
                     #{maxViewerCount},
                     #{likesCount},
                     #{avgPurchaseAmount},
                     #{avgViewingTime},
                     #{broadcastDuration},
                     #{avgProductClicks},
                     #{totalSalesAmount},
                     #{totalSalesQty},
                     #{viewsCount}
                 )
    </insert>

    <!-- ID로 방송 통계 레코드 조회 -->
    <select id="findById" parameterType="long" resultType="susussg.pengreenlive.broadcast.dto.BroadcastStatistics">
        SELECT * FROM TB_BROADCAST_STATISTICS WHERE BROADCAST_SEQ = #{broadcastSeq}
    </select>

    <!-- 방송 통계 테이블 업데이트 -->
    <update id="updateBroadcastStatistics" parameterType="susussg.pengreenlive.broadcast.dto.BroadcastStatistics">
        UPDATE TB_BROADCAST_STATISTICS
        SET MAX_VIEWER_COUNT = #{statistics.maxViewerCount},
            AVG_VIEWER_COUNT = #{statistics.avgViewerCount},
            BROADCAST_DURATION = #{statistics.broadcastDuration}
        WHERE broadcast_seq = #{broadcastId}
    </update>

    <!-- 방송 통계 조회수 업데이트 -->
    <update id="incrementViewsCount">
        UPDATE TB_BROADCAST_STATISTICS
        SET views_count = views_count + 1
        WHERE broadcast_seq = #{broadcastSeq}
    </update>

    <!-- 날짜 범위로 방송 통계 조회 -->
    <select id="getStatisticsByDateRange" parameterType="map" resultType="susussg.pengreenlive.broadcast.dto.BroadcastStatistics">
        SELECT * FROM TB_BROADCAST_STATISTICS
        WHERE BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate}
    </select>

    <!-- 날짜 범위로 특정 판매자에 대한 통계 조회 -->
    <select id="getStatisticsByVendorAndDateRange" resultType="susussg.pengreenlive.broadcast.dto.BroadcastStatistics">
        SELECT
            bs.BROADCAST_SEQ as broadcastSeq,
            bs.AVG_VIEWER_COUNT as avgViewerCount,
            bs.MAX_VIEWER_COUNT as maxViewerCount,
            bs.LIKES_COUNT as likesCount,
            bs.VIEWS_COUNT as viewsCount,
            bs.AVG_PURCHASE_AMOUNT as avgPurchaseAmount,
            bs.AVG_VIEWING_TIME as avgViewingTime,
            bs.BROADCAST_DURATION as broadcastDuration,
            bs.AVG_PRODUCT_CLICKS as avgProductClicks,
            bs.TOTAL_SALES_AMOUNT as totalSalesAmount,
            bs.TOTAL_SALES_QTY as totalSalesQty
        FROM TB_BROADCAST_STATISTICS bs
                 JOIN TB_BROADCAST b ON bs.BROADCAST_SEQ = b.BROADCAST_SEQ
                 JOIN TB_CHANNEL c ON b.CHANNEL_NM = c.CHANNEL_NM
        WHERE c.VENDOR_SEQ = #{vendorSeq}
          AND b.BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate}
    </select>

    <select id="getAverageBroadcastDuration" resultType="int">
        SELECT AVG(BROADCAST_DURATION)
        FROM TB_BROADCAST_STATISTICS
        WHERE BROADCAST_SEQ IN (
            SELECT BROADCAST_SEQ
            FROM TB_BROADCAST
            WHERE CHANNEL_SEQ = #{vendorSeq}
              AND BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate}
        );
    </select>

    <select id="getAverageViewerCount" resultType="int">
        SELECT AVG(BS.AVG_VIEWER_COUNT)
        FROM TB_BROADCAST_STATISTICS BS
                 INNER JOIN TB_BROADCAST B ON BS.BROADCAST_SEQ = B.BROADCAST_SEQ
        WHERE B.CHANNEL_SEQ = #{vendorSeq}
          AND B.BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate};
    </select>

    <select id="getAveragePurchaseQuantity" resultType="int">
        SELECT AVG(BS.TOTAL_SALES_QTY)
        FROM TB_BROADCAST_STATISTICS BS
                 INNER JOIN TB_BROADCAST B ON BS.BROADCAST_SEQ = B.BROADCAST_SEQ
        WHERE B.CHANNEL_SEQ = #{vendorSeq}
          AND B.BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate};
    </select>

    <select id="getAverageProductClicks" resultType="int">
        SELECT AVG(BS.AVG_PRODUCT_CLICKS)
        FROM TB_BROADCAST_STATISTICS BS
                 INNER JOIN TB_BROADCAST B ON BS.BROADCAST_SEQ = B.BROADCAST_SEQ
        WHERE B.CHANNEL_SEQ = #{vendorSeq}
          AND B.BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate};
    </select>

    <select id="getAverageViewingTime" resultType="int">
        SELECT AVG(BS.AVG_VIEWING_TIME)
        FROM TB_BROADCAST_STATISTICS BS
                 INNER JOIN TB_BROADCAST B ON BS.BROADCAST_SEQ = B.BROADCAST_SEQ
        WHERE B.CHANNEL_SEQ = #{vendorSeq}
          AND B.BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate};
    </select>

    <select id="getAverageLikesCount" resultType="int">
        SELECT AVG(BS.LIKES_COUNT)
        FROM TB_BROADCAST_STATISTICS BS
                 INNER JOIN TB_BROADCAST B ON BS.BROADCAST_SEQ = B.BROADCAST_SEQ
        WHERE B.CHANNEL_SEQ = #{vendorSeq}
          AND B.BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate};
    </select>

    <select id="getAveragePurchaseAmount" resultType="long">
        SELECT AVG(BS.TOTAL_SALES_AMOUNT)
        FROM TB_BROADCAST_STATISTICS BS
                 INNER JOIN TB_BROADCAST B ON BS.BROADCAST_SEQ = B.BROADCAST_SEQ
        WHERE B.CHANNEL_SEQ = #{vendorSeq}
          AND B.BROADCAST_SCHEDULED_TIME BETWEEN #{startDate} AND #{endDate};
    </select>

    <update id="updateAvgViewingTime">
        UPDATE TB_BROADCAST_STATISTICS
        SET avg_viewing_time = #{avgViewingTime}
        WHERE broadcast_seq = #{broadcastSeq}
    </update>


</mapper>
